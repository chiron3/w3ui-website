name: Build and Release
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      force_publish:
        description: Run the publish job no matter what
        type: boolean
        default: false
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version: 16
          cache: 'npm'
      - run: npm run lint
  preview:
    name: Preview
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version: 16
          cache: 'npm'
      - run: npm run build
      - run: npm run export
        env:
          NEXT_PUBLIC_ENV: staging
      - name: Deploy preview build to Cloudflare Pages
        uses: mathiasvr/command-output@v1.1.0
        id: cloudflare
        with:
          run: npx wrangler pages publish --project-name w3ui-staging --branch "$GITHUB_REF_NAME" --commit-hash "$GITHUB_SHA" ./out
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      - name: Find Cloudflare Pages preview URL
        uses: mathiasvr/command-output@v1.1.0
        id: cloudflare_url
        with:
          run: egrep -o 'https?://[^ ]+' <(echo "${{ steps.cloudflare.outputs.stdout }}")
      - name: Find Current Pull Request
        uses: jwalton/gh-find-current-pr@v1.3.0
        id: finder
      - name: Update Preview URLs PR Comment
        uses: marocchino/sticky-pull-request-comment@v2.2.0
        with:
          number: ${{ steps.finder.outputs.pr }}
          message: |
            ### Website preview 🔗✨
            - 🙂 https://w3s.link/ipfs/${{ steps.ipfs.outputs.cid }}
            - ⛅️ ${{ steps.cloudflare_url.outputs.stdout }}

            [build log](/${{ github.repository }}/actions/runs/${{ github.run_id }})
      - name: Add Preview URLs as Job Summary
        run: |
          echo "
          ### Website preview 🔗✨
            - 🙂 https://w3s.link/ipfs/${{ steps.ipfs.outputs.cid }}
            - ⛅️ ${{ steps.cloudflare_url.outputs.stdout }}

            [build log](/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
  publish:
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.release.outputs.releases_created) || inputs.force_publish
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - lint
      - preview
      - release
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version: 16
          cache: 'npm'
      - run: npm run build
      - run: npm run export
        env:
          NEXT_PUBLIC_ENV: production
      - name: Add to web3.storage
        uses: web3-storage/add-to-web3@v2
        id: w3
        with:
          path_to_add: out
          web3_token: ${{ secrets.WEB3_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update IPFS DNSLink https://ui.web3.storage
        run: npx dnslink-cloudflare --record _dnslink.ui --domain web3.storage --link /ipfs/${{ steps.ipfs.outputs.cid }}
        env:
          CF_API_TOKEN: ${{ secrets.CF_TOKEN }}
      - name: Deploy https://ui.web3.storage to Cloudflare Pages
        run: npx wrangler pages publish --project-name w3ui --branch "main" --commit-hash "$GITHUB_SHA" ./out
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_TOKEN}}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
